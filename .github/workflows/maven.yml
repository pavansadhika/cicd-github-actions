# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: project cicd flow
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  IMAGE_NAME: pavan9999/github-actions
  TAG: moonpage
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
     - uses: actions/checkout@v2
     - name: Set up JDK 1.8
       uses: actions/setup-java@v1
       with:
        java-version: '1.8'
        distribution: 'adopt'
        cache: maven
     - name: Build with Maven
       run: mvn clean install
     - name: Upload Artifacts
       uses: actions/upload-artifact@v2
       with: 
          name: artifacts
          path: /home/runner/work/cicd-github-actions/cicd-github-actions/target/*.jar
     - name: Docker-Image-Build & Push
       uses: mr-smithers-excellent/docker-build-push@v5
       with:
          image: ${IMAGE_NAME}
          tags: ${IMAGE_TAG}
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  junit-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Build and Test
      run: mvn test

    - name: Upload JUnit Test Results
      uses: actions/upload-artifact@v2
      with:
        name: junit-results
        path: /home/runner/work/cicd-github-actions/cicd-github-actions/*
    - name: Publish JUnit Test Report
      run: echo "JUnit test results uploaded successfully."
  Docker-Image-Build-Push:
    needs: build
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout code
      uses: actions/checkout@v2 
    - name: Build Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ env.IMAGE_NAME }}:${{ env.TAG }}
    - name: Log into Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}  
  jmeter-test:
    needs: Docker-Image-Build-Push
    runs-on: ubuntu-latest
    steps:
     - name: Checkout code
       uses: actions/checkout@v2
     - name: Setup Java
       uses: actions/setup-java@v1
       with:
          java-version: 11
     - name: Download and extract JMeter
       run: |
         curl -L https://downloads.apache.org/jmeter/binaries/apache-jmeter-5.5.zip -o jmeter.zip
         unzip jmeter.zip

     - name: Run JMeter test
       run: |
         ./apache-jmeter-5.5/bin/jmeter -n -t test.jmx -l result.jtl

     - name: Upload test results    
       uses: actions/upload-artifact@v2
       with:
          name: jmeter-test-results
          path: /home/runner/work/cicd-github-actions/cicd-github-actions/results.jtl

 
          
          
          
